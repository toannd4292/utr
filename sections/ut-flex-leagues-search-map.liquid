<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCapzh9VsfXAzC9fAaosZJulONx7H1BFaY&callback=initializeMap" defer></script>
<div class="page-width text-center pt-lg-2 pt-sm-1">
  
      {% case section.settings['heading-size'] %}
      {% when 'h1' %}
        <h1 class="text-uppercase section-title section-title-large mb-1 mb-sm-1 lh-xl-78">          
          {{ section.settings.heading }}
        </h1>
      {% when 'h2' %}
        <h2 class="text-uppercase section-title section-title-medium mb-1 mb-sm-1 lh-xl-78">          
          {{ section.settings.heading }}
        </h2>
      {% when 'h3' %}
        <h3 class="text-uppercase section-title section-title-small mb-1 mb-sm-1 lh-xl-78">          
          {{ section.settings.heading }}
        </h3>
    {% endcase %}
      {%- if section.settings.heading-permission == "YES" -%}
      <div class="mb-lg-4 mb-sm-1 mb-md-1 mt-sm-1"><div class="divider-sm-teal divider-lg-teal"></div></div>
    {%- endif -%}
  <p class="findtext fw-bold font-sm-14 pt-lg-0 w-xl-75 pb-lg-4 pt-sm-2 pb-sm-3 text-center mr-auto">{{ section.settings.description-title }}</p>
  <form class="mr-auto bg_black flex-search-bg">
    <div class="d-flex gap-2 align-items-center justify-content-center">
        <div class="flex-column d-flex w-xl-100">
          <label>Enter Location</label>
          <div class="position-relative">
            <svg class="mapicon" width="13" height="16" viewBox="0 0 13 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M6.23438 15.3125C6.65513 15.3125 8.29988 14.111 9.6105 12.6204C11.3576 10.6348 12.4219 8.4185 12.4219 6.3125C12.4219 2.97913 9.6825 0.6875 6.23438 0.6875C2.78625 0.6875 0.046875 2.97913 0.046875 6.3125C0.046875 8.4275 1.11113 10.6437 2.85825 12.6271C4.16775 14.1144 5.8125 15.3125 6.23438 15.3125ZM6.23438 10.1375C5.2796 10.1375 4.36392 9.75821 3.68879 9.08308C3.01366 8.40795 2.63438 7.49228 2.63438 6.5375C2.63438 5.58272 3.01366 4.66705 3.68879 3.99192C4.36392 3.31678 5.2796 2.9375 6.23438 2.9375C7.18915 2.9375 8.10483 3.31678 8.77996 3.99192C9.45509 4.66705 9.83437 5.58272 9.83437 6.5375C9.83437 7.49228 9.45509 8.40795 8.77996 9.08308C8.10483 9.75821 7.18915 10.1375 6.23438 10.1375Z" fill="#00C0F7"></path>
              </svg>
            <input id="search_input" type="text" class="gotham-bold text-black px-4 text-uppercase" placeholder="Enter a location" autocomplete="off" />
          </div>      
        </div>
        <div class="flex-column d-flex">
          <label>Distance(mi)</label>
          <input id="distance_input" type="number" class="gotham-bold text-black text-uppercase in-w-lg-90 in-w-sm-65" placeholder="mi" min="1" value="100"/>
        </div>
       <div class="flex-column d-flex">
          <button type="button" class="blue-teal-gradient-bg search-icon club-search-btn">
            <summary class="header__icon header__icon--search header__icon--summary link focus-inset modal__toggle" aria-haspopup="dialog" aria-label="{{ 'general.search.search' | t }}">
            <span class="text-white">
              <svg class="modal__toggle-open icon icon-search" aria-hidden="true" focusable="false" role="presentation">
                <use href="#icon-search"></use>
              </svg>
            </span>
          </summary>
          </button>
        </div>
      </div>   
 </form>
</div>
<div class="page-width pb-lg-5 pt-lg-5 pt-sm-2 pb-sm-2 px-sm-0">
<div id="updating-msg"></div>
    <div class="grid grid--1-col grid--1-col-tablet grid--2-col-desktop">
        <div class="grid__item order-sm-last order-md-last aria-scroll-lg ">
           <div class="ps-xl-2 ps-sm-0 pt-sm-2">
            <div id="flex" class="aria-scroll-sm">
            </div>
           </div>   
        </div>
        <div class="grid__item order-sm-first order-md-first ps-sm-2">
          <div id="map" class="border-radius-lg-3 border-radius-sm-3"></div>
        </div>
    </div>
</div>
<style>

      .section-title.section-title-large {
    font-size: 80px;
    color: var(--color-black);
    font-family: var(--font-Tungsten);
}

.section-title.section-title-small {
    font-size: 35px;
    color: var(--color-black);
    font-family: var(--font-Tungsten);
}
  

  @media screen and (max-width: 749px){
    .section-title.section-title-large {
    font-size: 60px;
    color: var(--color-black);
    font-family: var(--font-Tungsten);
}

.section-title.section-title-small {
    font-size: 26px;
    color: var(--color-black);
    font-family: var(--font-Tungsten);
}

.section-title.section-title-medium {
    font-size: 40px;
}
  }
  
</style>
    
{% schema %}
  {
    "name": "Flex Leagues Search Map",
    "presets": [
      {
        "name": "UT Flex Leagues Search & Map",
        "category": "UT Flex Leagues"
      }
    ],
    "settings": [
       {
			"type":"text",
			"id":"heading",
			"label": "Heading Title"
	  },
            {
    "type": "select",
    "id": "heading-size",
    "label": "Heading Size",
    "options": [
      {
        "value": "h1",
        "label": "Large"
      },
      {
        "value": "h2",
        "label": "Medium"
      },
      {
        "value": "h3",
        "label": "Small"
      }
    ],
    "default": "h2"
  },
      {
            "type": "radio",
            "id": "heading-permission",
            "label": "Do You Want Underline Below Heading?",
          "default": "NO",
            "options": [
        {
            "value": "NO",
            "label": "NO"
        },
        {
            "value": "YES",
            "label": "YES"
        }
            ]
        },
      {
       "type": "text",
       "id": "description-title",
       "label": "Description"
      }
    ]
  }
{% endschema %}

{% stylesheet %}

  #map {
    height: 100%;
  }
  
  html,
  body {
    height: 100%;
    margin: 0;
    padding: 0;
  }
  .search-item-data a{color:var(--color-black); text-decoration: none;}
.search-item-data a:hover{text-decoration: underline;}
.btn-black-sm{color: var(--color-white)!important; text-decoration: none !important;} 

{% endstylesheet %}

{% javascript %}


  let markerLocations = [];
  let eventLocations = [];
  let map;
  
  function setMarkers() {
    
    var infoWindow;
    
    for (var i = 0; i < eventLocations.length; i++) {
      var event = eventLocations[i];
      var myLatLng = new google.maps.LatLng(event[0], event[1]);
      const pinIcon = "https://cdn.shopify.com/s/files/1/0690/8071/1488/files/location-vector.svg?v=1679692179";
      // Create an info window to share between markers.
      infoWindow = new google.maps.InfoWindow();
      
      var marker = new google.maps.Marker({
          position: myLatLng,
          map: map,
          icon: pinIcon,
          animation: google.maps.Animation.DROP,
          title: event[2],
          zIndex: event[3],
          optimized: true
      });

      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          var contentString = '<div><a href="https://app.utrsports.net/clubs/'+eventLocations[i][4]+'" target="_blank">'+marker.getTitle()+'</div>';
          infoWindow.close();
          infoWindow.setContent(contentString);
          infoWindow.open(map, marker);
          for(var j = 0; j < markerLocations.length; j++) {
            //markerLocations[j].
          }
        }
    
      })(marker, i)); 
      
      // Push marker to markers array
      markerLocations.push(marker);
      
      map.setZoom(4);
      map.panTo(marker.position);

    }
    
  }

  function reloadMarkers() {

    // Loop through markers and set map to null for each
    for (var i=0; i<markerLocations.length; i++) {

        markerLocations[i].setMap(null);
        markerLocations[i] = null;
    }

    // Reset the markers array
    markerLocations = [];

    // Call set markers to re-add markers
    setMarkers();

  }

  window.initializeMap = function(){
    var mapOptions = {
       zoom: 4,
       center: { lat: 34.84555, lng: -101.299591 }
    }

    map = new google.maps.Map(document.getElementById('map'), mapOptions);
    
    setMarkers();

    // Bind event listener on button to reload markers
    //document.getElementById('reloadMarkers').addEventListener('click', reloadMarkers);

  }

  var clubData = {
    clubIds: []
  };

  var searchText = "";
  var distanceText = "";
  
  //Search Functionality
  let searchBtn = document.querySelector('.club-search-btn');
  searchBtn.onclick = () => {
    searchText = document.getElementById('search_input').value;
    distanceText = document.getElementById('distance_input').value;
    fetchDataFromGoogleMapAPI(searchText);
  }

  $('#search_input').keypress(function (e) {
   // console.log('input');
    if (e.which == 13) {

      e.preventDefault();
     
      //do something
      searchText = document.getElementById('search_input').value;
      distanceText = document.getElementById('distance_input').value;
      fetchDataFromGoogleMapAPI(searchText);
  
   }
  });


  //Fetch initial club data
  fetchClubs("https://api.utrsports.net/v2/search/clubs/13?top=500&skip=0");
  var distence_msg = document.getElementById("updating-msg");
  
  function fetchClubs(fetchURL) {
    // console.log("fetchClubs");

    eventLocations = [];
    clubData.clubIds = [];
    
    //Fetch league for everyone data
    var requestOptions = {
      method: 'GET',
      redirect: 'follow'
    };
    var cCount = 0;
    fetch(fetchURL, requestOptions)
      .then(response => response.json())
      .then((result) => {
        let data="";
         let tennisWinnerData = [];

        result.hits.map((values)=>{
            tennisWinnerData.push(values);          
        });
        
        //document.getElementById("flex").innerHTML="";
        if (tennisWinnerData.length > 0) {
        tennisWinnerData.forEach((values) =>{
           var clubName = values.source.name;  
          if (!clubName.includes('Pickleball')) {
          var id = values.source.id;
          var member = values.source.memberCount;    
          var startDate = "";
          var eventName = "";
          var llat = values.source.location.latLng[0];
          var llng = values.source.location.latLng[1];
          data += '<div class="item">' + 
'    <div class="search-item-data pe-lg-6 border-radius-lg-18 border-radius-sm-3 text-black p-2 position-relative">' + 
'        <div class="d-flex align-items-center justify-content-between"><h3 class="mb-2 flex-text-ellipsis mt-0 fw-bold text-uppercase lh-normal"><a href="https://app.utrsports.net/clubs/'+id+'" target="_blank">'+clubName+'</a></h3></div>' +
'        <div class="d-flex align-items-center justify-content-start flex-sm-column align-items-sm-start justify-content-sm-start">' + 
'            <h4 class="d-flex align-items-lg-center justify-content-lg-center gap-1 mb-0 mt-0">' + 
'                <svg width="18" height="17" viewBox="0 0 18 17" fill="none" xmlns="http://www.w3.org/2000/svg">' + 
'                    <path d="M3.26133 4.24336C3.26133 3.36814 3.60901 2.52878 4.22788 1.90991C4.84675 1.29104 5.68611 0.943359 6.56133 0.943359C7.43654 0.943359 8.27591 1.29104 8.89478 1.90991C9.51365 2.52878 9.86133 3.36814 9.86133 4.24336C9.86133 5.11857 9.51365 5.95794 8.89478 6.57681C8.27591 7.19568 7.43654 7.54336 6.56133 7.54336C5.68611 7.54336 4.84675 7.19568 4.22788 6.57681C3.60901 5.95794 3.26133 5.11857 3.26133 4.24336ZM11.0613 6.04336C11.0613 5.68879 11.1312 5.33769 11.2669 5.01011C11.4025 4.68253 11.6014 4.38489 11.8521 4.13417C12.1029 3.88345 12.4005 3.68457 12.7281 3.54888C13.0557 3.4132 13.4068 3.34336 13.7613 3.34336C14.1159 3.34336 14.467 3.4132 14.7946 3.54888C15.1222 3.68457 15.4198 3.88345 15.6705 4.13417C15.9212 4.38489 16.1201 4.68253 16.2558 5.01011C16.3915 5.33769 16.4613 5.68879 16.4613 6.04336C16.4613 6.75944 16.1769 7.4462 15.6705 7.95255C15.1642 8.4589 14.4774 8.74336 13.7613 8.74336C13.0452 8.74336 12.3585 8.4589 11.8521 7.95255C11.3458 7.4462 11.0613 6.75944 11.0613 6.04336ZM0.861328 14.4434C0.861328 12.9316 1.46186 11.4818 2.53082 10.4129C3.59978 9.34389 5.04959 8.74336 6.56133 8.74336C8.07306 8.74336 9.52288 9.34389 10.5918 10.4129C11.6608 11.4818 12.2613 12.9316 12.2613 14.4434V14.4458L12.2605 14.541C12.2588 14.6427 12.2313 14.7423 12.1805 14.8305C12.1297 14.9187 12.0573 14.9925 11.9701 15.045C10.3375 16.0281 8.46714 16.5463 6.56133 16.5434C4.58373 16.5434 2.73253 15.9962 1.15333 15.045C1.06601 14.9926 0.993462 14.9188 0.942517 14.8306C0.891573 14.7425 0.863908 14.6428 0.862128 14.541L0.861328 14.4434ZM13.4613 14.4458L13.4605 14.561C13.4561 14.8276 13.3924 15.0899 13.2741 15.329C14.6707 15.4151 16.0657 15.1367 17.3221 14.521C17.4193 14.4735 17.5018 14.4006 17.561 14.31C17.6201 14.2195 17.6537 14.1146 17.6581 14.0066C17.6864 13.3356 17.5408 12.6686 17.2357 12.0704C16.9305 11.4721 16.476 10.9628 15.9162 10.5918C15.3564 10.2207 14.7102 10.0005 14.0403 9.95254C13.3705 9.90454 12.6995 10.0303 12.0925 10.3178C12.9831 11.5086 13.4631 12.9563 13.4605 14.4434V14.4458H13.4613Z" fill="black"></path>' + 
'                </svg>' + 
'                <span class="fw-bold font-lg-18">'+member+'</span>' + 
'            </h4>' + 
'            <div id="flexEventStartDate_'+id+'"></div>' + 
'        </div>' + 
'        <div id="flexEventName_'+id+'"></div>' + 
'    </div>' + 
'</div>';
          clubData.clubIds.push(id);
          eventLocations.push([llat,llng,clubName,cCount,id]);
          cCount+=1;
          elseCounter = 0;

          if (elseCounter == 0){
          distence_msg.innerHTML = ' ';
        }
          }
        });
            map.setZoom(6);
        } else {
         elseCounter++;
        // console.log("elseCounter", elseCounter);
        if (elseCounter == 0){
          distence_msg.innerHTML = '';
        }
        if (elseCounter <= 1) {
          var searchText = document.getElementById('search_input').value;
          var setinInputBox = document.getElementById('distance_input');
          setinInputBox.value = '250';
          distence_msg.innerHTML = '<h3 class="flex-text-ellipsis mt-0 mb-1 fw-bold lh-normal">No results within ' + distanceText + ' miles - displaying results within 250 miles</h3>';

          distanceText = '250';
          setTimeout(function () {
            fetchDataFromGoogleMapAPI(searchText);
          }, 1000);
        } else if (elseCounter <= 2) {
          var searchText = document.getElementById('search_input').value;
          var setinInputBox = document.getElementById('distance_input');
          setinInputBox.value = '500';
          distence_msg.innerHTML = '<h3 class="flex-text-ellipsis mt-0 mb-1 fw-bold lh-normal">No results within ' + distanceText + ' miles - displaying results within 500 miles</h3>';
          distanceText = '500';

          setTimeout(function () {
            fetchDataFromGoogleMapAPI(searchText);
          }, 1000);
        } else {
          var setinInputBox = document.getElementById('distance_input');
          distence_msg.innerHTML = '<h3 class="flex-text-ellipsis mt-0 mb-1 fw-bold lh-normal">No results within ' + setinInputBox.value + ' miles </h3>';
          elseCounter = 0;
          distanceText = '100';
        }
      }
        
        var element_flex = document.getElementById("flex");

        if (element_flex) {
          element_flex.innerHTML=data;
          if (data) {
            fetchEventsData(); 
          }
        }

        reloadMarkers();
        
      }).catch(error => console.log('error', error));

  }



  
  
  //Fetch Events for Clubs
  function fetchEventsData(){
    // console.log("fetchEventsData");
    const fetchURL = "https://api.utrsports.net/v2/search/events/latest";
    
    var myHeaders = new Headers();
    myHeaders.append("Content-Type", "application/json");
    var requestOptions = {
      method: 'POST',
      headers: myHeaders,
      body: JSON.stringify(clubData),
      redirect: 'follow'
    };  
    fetch(fetchURL, requestOptions)
      .then(response => response.json())
      .then((result) => {
        
        result.hits.map((values)=>{
        
          var eventId = values.source.id;
          var eventName = values.source.name;
          var clubId = values.source.club.id;
          var eventStartShort = values.source.eventSchedule.eventStartShort;

          var element_eventStartDate = document.getElementById('flexEventStartDate_'+clubId);
          var element_eventName = document.getElementById('flexEventName_'+clubId);
          if (element_eventStartDate) {
            element_eventStartDate.innerHTML='<p class="font-lg-14 font-sm-12 mb-0 mt-0 px-lg-2 d-sm-block">Register Now for '+eventStartShort+' Session</p>';
          }
          if (element_eventName) {
            element_eventName.innerHTML+='<p class="font-lg-14 font-sm-12 mb-0 pb-sm-4"><span class="text-decoration-underline d-sm-block"><a href="https://app.utrsports.net/events/'+eventId+'" target="_blank">'+eventName+'</a></span></p>';          
          }
        });
      }).catch(error => console.log('error', error));
  }

  function fetchDataFromGoogleMapAPI(region){
    

    if (!region) {
      fetchClubs("https://api.utrsports.net/v2/search/clubs/13");
    } else {
          const fetchURL = 'https://maps.googleapis.com/maps/api/geocode/json?address='+region+'&key=AIzaSyCapzh9VsfXAzC9fAaosZJulONx7H1BFaY&language=en';
    let latVal = "";
    let longVal = "";
    
    var requestOptions = {
      method: 'GET',
      redirect: 'follow'
    };  
    fetch(fetchURL, requestOptions)
      .then(response => response.text())
      .then((data) => {
        let result = JSON.parse(data);
        if (result.results.length > 0) {
          
          latVal = result.results[0].geometry.location.lat;
          longVal = result.results[0].geometry.location.lng;
          
          if (latVal && longVal) {
             fetchClubs('https://api.utrsports.net/v2/search/clubs/13?distance='+distanceText+'mi&pin='+latVal+','+longVal);
          }          
        }
      })
      .catch(error => console.log('error', error));      
    }    
  }
{% endjavascript %}